// Flex grid
// Grid has equal columns, default setup is 'no wrap'

$flex-grid-gap:          $sd-base-increment * 2; // space between items is $flex-grid-gap*2
$flex-grid-gap-small:    $sd-base-increment; // alternative small gap
$flex-grid-columns:      6; // max number of columns supported

// map for media breakpoints, 'small' is mandatory and reserved as mobile first
$flex-grid-media: (
    medium: 40em,
    large: 60em,
    xlarge: 100em
);

// grid mixins
@mixin basic-grid {
    @for $i from $flex-grid-columns through 1 {
        &-#{$i} {
            .flex-grid__item {
               flex: 0 0 100% / $i;
                max-width: 100% / $i;
            }
        }
    }
}

@mixin basic-grid-boxed {
    @for $i from $flex-grid-columns through 1 {
        &-#{$i} {
            .flex-grid__item, 
            & > .sd-check__wrapper, 
            & > .btn,
            & > .icn-btn,
            & > .toggle-button  {
                flex: 0 0 calc(#{100% / $i} - #{$flex-grid-gap / $i * ($i - 1)});
                max-width: calc(#{100% / $i} - #{$flex-grid-gap / $i * ($i - 1)});
            }

            & > .btn,
            & > .icn-btn, 
            & > .toggle-button {
                flex-shrink: 0;
            }

            .sd-check__wrapper {
                display: flex;

                .sd-checkbox.sd-checkbox--button-style {
                    display: flex;
                    flex-grow: 1;

                    label {
                        flex-grow: 1;
                    }
                }
            }
        }
    }
}

@mixin basic-grid-boxed-small {
    @for $i from $flex-grid-columns through 1 {
        &-#{$i} {
            .flex-grid__item, 
            & > .sd-check__wrapper, 
            & > .btn,
            & > .icn-btn, 
            & > .toggle-button {
                flex: 0 0 calc(#{100% / $i} - #{$flex-grid-gap-small / $i * ($i - 1)});
                max-width: calc(#{100% / $i} - #{$flex-grid-gap-small / $i * ($i - 1)});
            }

            & > .btn,
            & > .icn-btn, 
            & > .toggle-button {
                flex-shrink: 0;
            }

            .sd-check__wrapper {
                display: flex;

                .sd-checkbox.sd-checkbox--button-style {
                    display: flex;
                    flex-grow: 1;

                    label {
                        flex-grow: 1;
                    }
                }
            }
        }
    }
}

// grid
.flex-grid {
    display: flex;
    flex-direction: row;
    // overflow: hidden;
    // overflow-x: auto;
    
    .flex-grid__item {
        position: relative;
    }

    .flex-grid__item--d-flex {
        display: flex;
    }

    .flex-grid__item--column {
        flex-direction: column;
    }
}

.flex-grid--wrap-items {
    flex-wrap: wrap;
}

.flex-grid--content-center {
    justify-content: center;
}

.flex-grid--grow {
    flex-grow: 1;
}

.flex-grid--boxed {
    gap: $flex-grid-gap;

    .flex-grid__item {
        margin: 0;
    }
}

.flex-grid--boxed-small {
    gap: $flex-grid-gap-small;

    .flex-grid__item, .sd-check__wrapper, .btn, .toggle-button {
        margin: 0 !important;
    }
}

.flex-grid--plain {
    gap: $flex-grid-gap;

    .flex-grid__item {
        margin: 0;
        padding: 0;
    }
}

// default grid setup (mobile first), calc for 1-6 columns
.flex-grid--small {
    @include basic-grid;
}

.flex-grid--boxed {
    &.flex-grid--small {
        @include basic-grid-boxed;
    }
}

.flex-grid--boxed-small {
    &.flex-grid--small {
        @include basic-grid-boxed-small;
    }
}

.flex-grid--padding {
    padding: 2rem;
}

.flex-grid--scroll {
    overflow-y: auto;
}

.flex-grid.flex-grid--boxed + .flex-grid.flex-grid--boxed {
    margin-top: $flex-grid-gap;
}
.flex-grid.flex-grid--boxed--small + .flex-grid.flex-grid--boxed--small {
    margin-top: $flex-grid-gap-small;
}

// Media queries
@each $name, $value in $flex-grid-media {
    @media only screen and (min-width: $value) {
        .flex-grid--#{$name} {
            @include basic-grid;
        }

        .flex-grid--boxed {
            &.flex-grid--#{$name} {
                @include basic-grid-boxed;
            }
        }

        .flex-grid--boxed-small {
            &.flex-grid--#{$name} {
                @include basic-grid-boxed-small;
            }
        }
    }
}
